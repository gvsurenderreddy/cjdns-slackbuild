#!/bin/sh
DEBUG=false
CJDNS_PATH="/opt/cjdns/"
CJDROUTE_CONFIG="/etc/cjdns/cjdroute.conf"
CJDROUTE_BIN="$CJDNS_PATH/cjdroute"
CJDNS_BIN="$CJDNS_PATH/cjdns"
LOG="/dev/null"
PIDFILE="/var/run/cjdroute.pid"
TUN_IF="tun0"

. /etc/rc.d/init.d/functions

PID=""
if [ -n "$2" ] && [ "$2" == "debug" ] ;then
	DEBUG=true
	CJDNS_LOG="/tmp/cjdroute-debug.log"
fi

remove_tun(){
	ip tuntap del mode tun $TUN_IF 2>&1 >/dev/null
}

mydebug(){
	if $DEBUG ;then echo -e "\nDEBUG:  $@" ;fi
}

get_pids(){
	if [ -e $PIDFILE ] ;then
		PID=`cat $PIDFILE`
	else
		PID=`pidof -o %PPID $CJDROUTE_BIN $CJDNS_BIN`
	fi
}

rm_pid_file(){
	if [ -e $PIDFILE ] ;then
		rm -rf $PIDFILE
	fi
}

am_root(){
	if [ `id -u` -ne 0 ] ;then
		echo "Must be root to execute!"
		failure
		exit 1
	fi
}

start_cjdroute(){
	am_root
	update_boot_stage "Starting cjdroute ... "
	# Fail if the config file does not exists
    if [ ! -f "$CJDROUTE_CONFIG" ] || [ ! -s "$CJDROUTE_CONFIG" ]; then
		echo -n "$CJDNS_CONFIG is missing/empty: run 'cjdroute --genconf > $CJDNS_CONFIG' then configure it "
		failure
		exit 1
	fi
	# Start cjdroute
	if [ -z "$PID" ]; then
		"$CJDROUTE_BIN" < "$CJDNS_CONFIG" 2>&1 > "$CJDNS_LOG" &
		sleep 2
		get_pids
		if [ -z "$PID" ]; then
			echo -n "Unable to start cjdroute "
			failure
			exit 1
		else
			daemon --pidfile=$PIDFILE
			echo -n "Started cjdroute "
			success
			exit 0
		fi
	else
		echo -n "cjdroute is already running "
		failure
		exit 1
	fi
}

stop_cjdroute(){
	am_root
	mydebug "Stopping cjdroute"
	update_boot_stage "Stopping cjdroute ... "
	if [ -n "${PID}" ] && checkpid $PID ;then
		kill -9 $PID
		remove_tun
		mydebug "PID file not found or PID in the file does not exists. Using PID found from pidof: $PID"
		echo -n "Stopping cjdroute ... "
		mydebug "success"
		success
		exit 0
	else
		if [ -e $PIDFILE ] ;then
			mydebug "cjdns is not running; pid: $PID pidfile: `cat $PIDFILE` "
		else
			mydebug "cjdns is not running; pid: $PID pidfile: n/a "
		fi
		echo -n "cjdns is not running "
		mydebug "failed"
		failure
		exit 1
	fi
}

get_pids

case "$1" in
	start)
		start_cjdroute
		;;

	stop)
		stop_cjdroute
		;;

	restart)
		$0 stop
		while [ -n "$PID" -a -d "/proc/$PID" ] ;do
			sleep 1
			get_pids
		done
		$0 start 
		;;

	status)
		echo -n "cjdroute ... "
		if checkpid $PID ;then
			echo "Running"
		else
			echo "Not running"
		fi
		;;

	*)
		echo "usage: $0 {start|stop|restart|status}"
		;;
esac
exit 0
